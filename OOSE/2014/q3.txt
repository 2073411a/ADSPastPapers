a) Defect detection: Attempting to find and fix any defects in the systembefore it is completed.
Faliure documentation: Document any problems with the system so that they are known ahead of time.
Acceptence demonstration: Showing that the system works
b) Integration test stratagey attempts to test from the least integrated components, in towards those which are more integrated with the system. One example would be the outside in stratagey, which involes testing all unintegrated components, then moving inwards to more integrated parts.
c)i) In JUnit, firstly, any fixtures must be defined before test cases, secondly, using the @Before annotation is used to designate a function as being called before any test cases, to set up the fixtures. Finally, the @After annotation is used to reset any fixtures, usually returning them too null, after each test case.
ii) A stub class coulb be used to test the SimpleTemperatureTracker interface by creating a small class which only implements the meathods from the interface as well as any auxerilery functions to handle the testing for the meathods. This allows the fixture to take a class with the interface, call the meathods, and insure that they are properly implemented.
iii) Call the record meathod three times with temperature over 100c, checking that no allert is issued on the first two times, then, on the third, that an allert is.
iv) Call the record meathod twice on over 100c, the again with one under 100c, then check that no allert was issued.
v) Firstly, call the meathod used in part iii, keeping track wheather or not it returns true. Then record a temperature over 100c, checking after if a second meathod was called.
