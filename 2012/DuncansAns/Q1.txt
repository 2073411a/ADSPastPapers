c) Best case O(nlog(N)) where n is the size of the tree we are checking is subsumed by the tree of size N,as is must go over the complete data set at least once to check every value, as well as search the tree to confirm, which has complexity log(n) in the best case.
   Worst case O(n*N), when it must go through the entirety of the tree to confirm each value. 
   To ensure the best case, the larger tree should be balanced, or an AVL Tree.

d)(Not asked to write insert for BSTree, assuming we only insert if it doesn't exist)
t1
    4
  2   6
1  3 5 7
t2
    1
     2
      7
     6
    3
     4
      5
height t1: 2
height t2: 6
preorder t1: 4,2,1,3,6,5,7
postorder t1: 1,3,2,5,7,6,4
preorder t2: 1,2,7,6,3,4,5
postorder t2: 5,4,3,6,7,2,1

