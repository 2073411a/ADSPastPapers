You have been assigned to a software development project in a larger company, which has existed for about three years. The team is loosely organised, consisting of five developers with no explicit roles. The software developed by the team is used to compute the annual payments (called premiums) for a variety of insurance products, including, for example car insurance, buildings insurance and life insurance. Premiums are calculated based on (partially automated) risk factors. For example, participating in a dangerous activity, such as rock climbing, adds to the cost of life insurance. Older drivers are considered to be lower risk than younger drivers, so their car insurance premium is lower.

The software tool began with a single customer, but is now licensed to several different very large insurance companies. Each insurance company gathers their own data to inform risk calculations, meaning that the system must accommodate different models used to calculate risk and consequent premiums. This may mean that a customer may be offered a different premium by each of the different insurance companies, even though they are using the same software tool to calculate the risk.

The team work on developing new features in monthly iterations. The team organises monthly meetings with representatives from each of the customers in order to gather new requirements. In addition, users of the system in the insurance companies are able to email the team to request new features to be implemented between meetings, or to report defects that need to be fixed quickly.

The master copy of the code for the team’s project is stored on a shared file store. Each team member maintains a local copy of the project on their development machine. When changes are required to the system, the developer works on the changes on their local machine and then copies modified files back to the server in order to update the master copy. New releases of the software are copied from the file store and transferred directly to servers hosted in the customers’ own data centres. The team has begun to experience significant disruption to their plans for the delivery of new features. The team have been unable to deliver a number of important features agreed during customer meetings on time. The team also report their impression that the number of defects reported by customers in the software has increased considerably. Features that were correct suddenly start producing incorrect outputs. Teams working on dependent software projects report that methods sometimes disappear from the published API without warning and then re-appear. Sometimes the tool doesn’t even compile and execute correctly on a customer’s infrastructure. One of the team attempted to remedy matters by restructuring the tool’s architecture into distinct components, but this created even more problems.


