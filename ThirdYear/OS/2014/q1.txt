a) A Page replecment algorithm is an algorithim that is used to replace a page in memory when a page fault occours.
b) I would choose an algrothim with a global scope. This is because the randomly updating application will need to change pages frequently, whilst the others, as interactive applications, will not need to change thier pages that frequently, therefore most likley won't be encountering page faults all that often.
ci) The second chance algorithm assigns every page currently in memory a reference bit, initialy 0, refering to wheather or not the page is to be given a second chance or not, and storing this in a FIFO queue. When a page fault occours, the algorithm works through the queue, checking the reference bit. If the reference bit is 1 it sets it to 0 and sends the page to the back of the queue, then continues checking utill it finds one with a refrence bit set to 0, which it removes for the list and adds the new page to the back.
ii) The clock varient maintains a cirular list of pages in memory, alongside a pointer (hand) indicating which page was last examined, whenever a page fault occours the algorithm checks from the hand, incrementing allong the list each time until it finds one with a refrence bit of 0, beheaving like the second chance algorthim over this list.
iii) The clock varient would be oreffered in a situation where the pages needed to be swapped out will occour in order, for example updating elements in a very large array consecutively, as it will continue in order throughout the list.
